package hospital;

import java.util.ArrayList;

import com.mongodb.BasicDBObject;
import com.mongodb.Cursor;
import com.mongodb.DB;
import com.mongodb.DBCollection;
import com.mongodb.DBObject;
import com.mongodb.MongoClient;
/**
 *
 * @author wolf
 */
public class MongoHandler {
    KEY k=new KEY();
    AES aes=new AES(k.key);
    Hasher h=new Hasher();
    private	MongoClient mg;
    MongoHandler()
    {
            mg=new MongoClient("localhost",27017);
    }	
    public boolean insert1(MongoParameterPasser object)
    {
            try
            {               
                String hashedPid=h.HashingFunction(object.patient_id,2);
                System.out.println("hashpid = " );
                DB dbs=mg.getDB("Hospital");
                object.encrypted_p_name=aes.encrypt(object.p_name);
                object.encrypted_room_no=aes.encrypt(object.room_no);
                DBCollection coll=dbs.getCollection("Patient1");
                BasicDBObject patnt=new BasicDBObject("patient_id",hashedPid)
                                .append("name",object.encrypted_p_name)
                                .append("room_no",object.encrypted_room_no);
                coll.insert(patnt);
            }catch(Exception e)
            {
                    return false;
            }
            return true;
    }
    public boolean insert2(MongoParameterPasser object)
    {
            try
            {               
                String hashedPid=h.HashingFunction(object.patient_id,3);
                DB dbs=mg.getDB("Hospital");
                object.encrypted_meds=aes.encrypt(object.meds);
                DBCollection coll=dbs.getCollection("Patient2");
                BasicDBObject patnt=new BasicDBObject("patient_id",hashedPid)
                                .append("medicine",object.encrypted_meds);
                coll.insert(patnt);
            }catch(Exception e)
            {
                    return false;
            }
            return true;
    }
    public boolean insert3(MongoParameterPasser object)
    {
            try
            {               
                String hashedPid=h.HashingFunction(object.patient_id,4);
                DB dbs=mg.getDB("Hospital");
                object.encrypted_disease=aes.encrypt(object.disease);
                DBCollection coll=dbs.getCollection("Patient3");
                BasicDBObject doc1=new BasicDBObject("patient_id",hashedPid)
                                .append("disease",object.encrypted_disease);
                coll.insert(doc1);
            }catch(Exception e)
            {
                    return false;
            }
            return true;
    }
    public boolean insert_doc_patient(MongoParameterPasser object) throws Exception
    {
        
        KEY k=new KEY();
        AES aes=new AES(k.key);
        String enc=aes.encrypt(object.patient_id);
            try
            {
                DB dbs=mg.getDB("Hospital");
                DBCollection coll=dbs.getCollection("doctor");
                BasicDBObject doc1p=new BasicDBObject("d_id",object.hased_did)
                                .append("p_id",enc);
                coll.insert(doc1p);
            }catch(Exception e)
            {
                    return false;
            }
            return true;
    }
    public boolean modifyMed(MongoParameterPasser object) throws Exception{
    	try
    	{
    		KEY k=new KEY();
    		AES aes=new AES();
    		
    		DB dbs=mg.getDB("Hospital");
    		DBCollection coll=dbs.getCollection("Patient2");
    		BasicDBObject updatemed=new BasicDBObject();
    		updatemed.put("medicine",object.encrypted_meds);
    		BasicDBObject update=new BasicDBObject();
    		update.put("$set",updatemed);
    		BasicDBObject old=new BasicDBObject().append("medicine",object.encrypted_meds);
    		coll.update(old, update);
    	}catch(Exception e) {
    		return false;
    	}
    	return true;
    }
    /*public boolean insert_nurse_patient(MongoParameterPasser object) throws Exception
    {
        
        KEY k=new KEY();
        AES aes=new AES(k.key);
        String enc=aes.encrypt(object.patient_id);
            try
            {               
                String hashedNid=h.HashingFunction(object.patient_id,1);
                DB dbs=mg.getDB("Hospital");
                DBCollection coll=dbs.getCollection("Nurse_Patient");
                BasicDBObject noc1p=new BasicDBObject("patient_id",hashedNid)
                                .append("disease",enc);
                coll.insert(noc1p);
            }catch(Exception e)
            {
                    return false;
            }
            return true;
    }   */ 
}
